{"ast":null,"code":"import _toConsumableArray from \"/Users/likhitha/Desktop/Projects/cms/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/likhitha/Desktop/Projects/cms/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/likhitha/Desktop/Projects/cms/client/src/components/dashboard/Map1.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport data from './data/db.json'; //import service from 'services.js';\n\nimport axios from 'axios';\nimport DisplayEntries from \"./DisplayEntries\";\nimport service from \"./services.js\"; //import Map1 from './Map1.js'\n//import { Map, CircleMarker, Polygon, Popup, Marker, TileLayer,Tooltip,ZoomControl } from \"react-leaflet\";\n//import \"leaflet/dist/leaflet.css\";\n//import data from \"./cities\";\n\nimport { MapContainer, Pane, ImageOverlay, SVGOverlay, CircleMarker, LayerGroup, Polyline, Polygon, Popup, Rectangle, Marker, TileLayer, Tooltip, ZoomControl } from \"react-leaflet\";\nimport { Card, CardBody, CardTitle, Col, Row } from \"reactstrap\";\n\nvar Map1 = function Map1() {\n  _s();\n\n  /*constructor(props) {\n        super(props)\n        this.state = {\n          lat: 60.2330141,\n          lng: 24.8302054,\n          zoom: 15,\n          maxZoom: 30\n        }\n      }*/\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      markers = _useState2[0],\n      setMarkers = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newLat = _useState4[0],\n      setNewLat = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newLng = _useState6[0],\n      setNewLng = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      newName = _useState8[0],\n      setNewName = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      newFilter = _useState10[0],\n      setNewFilter = _useState10[1];\n  /*useEffect(()=>{\n    axios.get('http://localhost:3001/markers')\n    .then(response => setMarkers(response.data))\n  },[])*/\n\n\n  useEffect(function () {\n    service.getAll().then(function (latlng) {\n      console.log(\"returning\", latlng);\n      setMarkers(latlng);\n    });\n  }, []);\n  /*const kids = [\n    [60.233040, 24.830488],\n    [60.233085, 24.830570],\n    [60.233019, 24.830413],\n    [60.233043, 24.830376], \n    [60.233040, 24.830360],\n    [60.233025, 24.830291]\n  ]\n  const home1 = [\n    [60.232963, 24.830337],\n    [60.233039, 24.830455],\n    [60.233086, 24.830322],\n    [60.233014, 24.830213], \n  ]\n  const Corridar = [\n    [60.232986, 24.830354],\n    [60.233010, 24.830479],\n    [60.233076, 24.830597],\n    [60.233068, 24.830526],\n  ]\n  const Kitchen = [\n    [60.233041, 24.830330],\n    [60.233065, 24.830372],\n    [60.233085, 24.830314],\n    [60.233066, 24.830276]\n  ]*/\n\n  var kids = [[60.23296, 24.83034], [60.23299, 24.83039], [60.23302, 24.83031], [60.23299, 24.83026]];\n  var br = [[60.23299, 24.83026], [60.23301, 24.83029], [60.23303, 24.83024], [60.23301, 24.83022]];\n  var tv = [[60.23301, 24.83030], [60.23304, 24.83035], [60.23306, 24.83030], [60.23303, 24.83025]];\n  var wc = [[60.23303, 24.83040], [60.23304, 24.83042], [60.23305, 24.83039], [60.23303, 24.83038]];\n  var Corridar = [[60.23299, 24.83040], [60.23301, 24.83043], [60.23303, 24.83037], [60.23302, 24.83034]];\n  var Kitchen = [[60.23304, 24.83035], [60.23306, 24.83038], [60.23308, 24.83033], [60.23306, 24.83030]];\n\n  var changeHandler = function changeHandler(event) {\n    return setNewLat(event.target.value);\n  };\n\n  var changeHandler1 = function changeHandler1(event) {\n    return setNewLng(event.target.value);\n  };\n\n  var changeHandler2 = function changeHandler2(event) {\n    return setNewName(event.target.value);\n  };\n\n  var changeHandlerFilter = function changeHandlerFilter(event) {\n    return setNewFilter(event.target.value);\n  };\n\n  var position = [60.21749913, 24.938379];\n  var position1 = [60.21749913, 24.806496774];\n  console.log(position);\n  /*const submitHandler = (event) => {\n     \n  const submitHandler = (event) => {\n    event.preventDefault()\n                   /*if(markers.some((entry)=> entry.name === newName)){\n        alert(`${newName} is already added `)\n        setNewLat(\"\")\n        setNewLng(\"\")\n        setNewName(\"\")\n    }else{*/\n\n  /*const newMarker = {\n      lat:newLat,\n      lng:newLng,\n      name:newName,\n      id:markers.length + 1\n  }\n  setNewLat(\"\")\n    setNewLng(\"\")\n    setNewName(\"\")\n  setMarkers(markers.concat(newMarker))\n  //}\n  }*/\n\n  var submitHandler = function submitHandler(event) {\n    event.preventDefault();\n    service.getAll().then(function (latlng) {\n      var allMarkers = _toConsumableArray(latlng);\n\n      var newMarker = {\n        id: markers.length + 1,\n        lat: parseFloat(newLat),\n        lng: parseFloat(newLng),\n        name: newName\n      };\n      service.update(newMarker).then(function (newEntry) {\n        setNewLat(\"\");\n        setNewLng(\"\");\n        setNewName(\"\");\n        setMarkers(latlng.concat(newEntry));\n      });\n    });\n  };\n\n  function renderPopup(index) {\n    return /*#__PURE__*/_jsxDEV(Popup, {\n      tipSize: 5,\n      anchor: \"bottom-right\",\n      longitude: markers[index].lng,\n      latitude: markers[index].lat,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: submitHandler,\n          children: markers[index].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 19\n    }, this);\n  }\n\n  var handleClick = function handleClick(e) {\n    e.latlng();\n  };\n  /*const submitHandler2 =(event) => {\n    event.preventDefault()\n    \n    return (\n     <div>\n      <Map\n      style={ { height: \"900px\", width: \"100%\"}}\n      center={[markers.lat, markers.lng]} zoom={12} maxZoom={100}>\n        const newMarker = {\n          id:markers.length + 1,\n          lat:parseFloat(newLat),\n          lng:parseFloat(newLng),\n          name:newName\n                   }\n         service\n          .update(newMarker)\n          .then(newEntry =>{\n              setNewLat(\"\")\n              setNewLng(\"\")\n              setNewName(\"\")\n            setMarkers(latlng.concat(newEntry))\n          })\n                 \n      <TileLayer\n    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n  />\n      })\n  }\n                 {markers.map((index) => {\n        \n          //let post1 = [markers[index].lat, markers[index].lng];\n         // console.log(post1)\n        return (\n          <Marker\n            key={index}\n            position={{ lat: markers.lat, lng: markers.lng }}\n            \n            \n          >\n        \n          </Marker>\n        );\n      })}\n    </Map>\n    </div>\n    )\n  }*/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"position\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"iq-card\",\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \"iq-card-body\",\n              children: /*#__PURE__*/_jsxDEV(MapContainer, {\n                style: {\n                  height: \"900%\",\n                  width: \"100%\"\n                },\n                center: position1,\n                zoom: 12,\n                maxZoom: 100,\n                center: [60.2330141, 24.8302054],\n                zoom: 12,\n                maxZoom: 100,\n                onClick: handleClick,\n                children: [/*#__PURE__*/_jsxDEV(Polygon, {\n                  positions: [[60.218228, 24.811606], [60.218358, 24.811976], [60.218348, 24.812711], [60.217940, 24.811874]],\n                  color: \"red\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 15\n                }, _this), /*#__PURE__*/_jsxDEV(TileLayer, {\n                  url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n                  attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 15\n                }, _this), /*#__PURE__*/_jsxDEV(Rectangle, {\n                  bounds: wc,\n                  color: 'yellow'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 5\n                }, _this), /*#__PURE__*/_jsxDEV(Rectangle, {\n                  bounds: kids,\n                  color: 'red'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 12\n                }, _this), /*#__PURE__*/_jsxDEV(Rectangle, {\n                  bounds: br,\n                  color: 'pink'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 5\n                }, _this), /*#__PURE__*/_jsxDEV(Rectangle, {\n                  bounds: tv,\n                  color: 'purple'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 5\n                }, _this), /*#__PURE__*/_jsxDEV(Rectangle, {\n                  bounds: Corridar,\n                  color: 'blue'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 13\n                }, _this), /*#__PURE__*/_jsxDEV(Rectangle, {\n                  bounds: Kitchen,\n                  color: 'orange'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 5\n                }, _this), markers.map(function (marker, index) {\n                  var post = [marker.lat, marker.lng];\n                  return /*#__PURE__*/_jsxDEV(Marker, {\n                    position: post,\n                    children: renderPopup(index)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 19\n                  }, _this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 21\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 21\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 17\n  }, _this);\n};\n\n_s(Map1, \"5BQT7kaT51X6Iqs5jCjAiEqxjQ0=\");\n\n_c = Map1;\nexport default Map1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map1\");","map":{"version":3,"sources":["/Users/likhitha/Desktop/Projects/cms/client/src/components/dashboard/Map1.js"],"names":["React","useEffect","useState","Link","connect","data","axios","DisplayEntries","service","MapContainer","Pane","ImageOverlay","SVGOverlay","CircleMarker","LayerGroup","Polyline","Polygon","Popup","Rectangle","Marker","TileLayer","Tooltip","ZoomControl","Card","CardBody","CardTitle","Col","Row","Map1","markers","setMarkers","newLat","setNewLat","newLng","setNewLng","newName","setNewName","newFilter","setNewFilter","getAll","then","latlng","console","log","kids","br","tv","wc","Corridar","Kitchen","changeHandler","event","target","value","changeHandler1","changeHandler2","changeHandlerFilter","position","position1","submitHandler","preventDefault","allMarkers","newMarker","id","length","lat","parseFloat","lng","name","update","newEntry","concat","renderPopup","index","handleClick","e","height","width","map","marker","post"],"mappings":";;;;;;;;AACU,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,gBAAjB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,eAApB,C,CACA;AACA;AACA;AACA;;AACA,SAAQC,YAAR,EAAsBC,IAAtB,EAA6BC,YAA7B,EAA2CC,UAA3C,EAAuDC,YAAvD,EAAoEC,UAApE,EAAgFC,QAAhF,EAA0FC,OAA1F,EAAmGC,KAAnG,EAA0GC,SAA1G,EAAqHC,MAArH,EAA6HC,SAA7H,EAAuIC,OAAvI,EAA+IC,WAA/I,QAAkK,eAAlK;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,GAApC,EAAyCC,GAAzC,QAAoD,YAApD;;AAMA,IAAMC,IAAI,GAAI,SAARA,IAAQ,GAAM;AAAA;;AAClB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAT8B,kBAUc1B,QAAQ,CAAC,EAAD,CAVtB;AAAA;AAAA,MAUT2B,OAVS;AAAA,MAUAC,UAVA;;AAAA,mBAWgB5B,QAAQ,CAAC,EAAD,CAXxB;AAAA;AAAA,MAWN6B,MAXM;AAAA,MAWEC,SAXF;;AAAA,mBAYgB9B,QAAQ,CAAC,EAAD,CAZxB;AAAA;AAAA,MAYN+B,MAZM;AAAA,MAYEC,SAZF;;AAAA,mBAakBhC,QAAQ,CAAC,EAAD,CAb1B;AAAA;AAAA,MAaNiC,OAbM;AAAA,MAaGC,UAbH;;AAAA,mBAcoBlC,QAAQ,CAAC,EAAD,CAd5B;AAAA;AAAA,MAcPmC,SAdO;AAAA,MAcIC,YAdJ;AAed;AAChB;AACA;AACA;;;AAEgBrC,EAAAA,SAAS,CAAC,YAAI;AACZO,IAAAA,OAAO,CACN+B,MADD,GAECC,IAFD,CAEM,UAAAC,MAAM,EAAG;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,MAAzB;AACAX,MAAAA,UAAU,CAACW,MAAD,CAAV;AACD,KALD;AAMD,GAPQ,EAOP,EAPO,CAAT;AAYA;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGgB,MAAMG,IAAI,GAAG,CACX,CAAC,QAAD,EAAW,QAAX,CADW,EAEX,CAAC,QAAD,EAAW,QAAX,CAFW,EAGX,CAAC,QAAD,EAAW,QAAX,CAHW,EAIX,CAAC,QAAD,EAAW,QAAX,CAJW,CAAb;AAOA,MAAMC,EAAE,GAAG,CACT,CAAC,QAAD,EAAW,QAAX,CADS,EAET,CAAC,QAAD,EAAW,QAAX,CAFS,EAGT,CAAC,QAAD,EAAW,QAAX,CAHS,EAIT,CAAC,QAAD,EAAW,QAAX,CAJS,CAAX;AAMA,MAAMC,EAAE,GAAG,CACT,CAAC,QAAD,EAAW,QAAX,CADS,EAET,CAAC,QAAD,EAAW,QAAX,CAFS,EAGT,CAAC,QAAD,EAAW,QAAX,CAHS,EAIT,CAAC,QAAD,EAAW,QAAX,CAJS,CAAX;AAMA,MAAMC,EAAE,GAAG,CACT,CAAC,QAAD,EAAW,QAAX,CADS,EAET,CAAC,QAAD,EAAW,QAAX,CAFS,EAGT,CAAC,QAAD,EAAW,QAAX,CAHS,EAIT,CAAC,QAAD,EAAW,QAAX,CAJS,CAAX;AAUA,MAAMC,QAAQ,GAAG,CACf,CAAC,QAAD,EAAW,QAAX,CADe,EAEf,CAAC,QAAD,EAAW,QAAX,CAFe,EAGf,CAAC,QAAD,EAAW,QAAX,CAHe,EAIf,CAAC,QAAD,EAAW,QAAX,CAJe,CAAjB;AAMA,MAAMC,OAAO,GAAG,CACd,CAAC,QAAD,EAAW,QAAX,CADc,EAEd,CAAC,QAAD,EAAW,QAAX,CAFc,EAGd,CAAC,QAAD,EAAW,QAAX,CAHc,EAId,CAAC,QAAD,EAAW,QAAX,CAJc,CAAhB;;AAMJ,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD;AAAA,WAAWnB,SAAS,CAACmB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAApB;AAAA,GAAtB;;AACA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACH,KAAD;AAAA,WAAWjB,SAAS,CAACiB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAApB;AAAA,GAAvB;;AACA,MAAME,cAAc,GAAE,SAAhBA,cAAgB,CAACJ,KAAD;AAAA,WAAWf,UAAU,CAACe,KAAK,CAACC,MAAN,CAAaC,KAAd,CAArB;AAAA,GAAtB;;AACA,MAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACL,KAAD;AAAA,WAAWb,YAAY,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAvB;AAAA,GAA5B;;AAKM,MAAMI,QAAQ,GAAG,CAAC,WAAD,EAAc,SAAd,CAAjB;AACA,MAAMC,SAAS,GAAG,CAAC,WAAD,EAAc,YAAd,CAAlB;AACAhB,EAAAA,OAAO,CAACC,GAAR,CAAYc,QAAZ;AACA;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACgB,MAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACR,KAAD,EAAW;AAC/BA,IAAAA,KAAK,CAACS,cAAN;AACDpD,IAAAA,OAAO,CACL+B,MADF,GAEEC,IAFF,CAEO,UAAAC,MAAM,EAAG;AACb,UAAMoB,UAAU,sBAAOpB,MAAP,CAAhB;;AAEA,UAAMqB,SAAS,GAAG;AAChBC,QAAAA,EAAE,EAAClC,OAAO,CAACmC,MAAR,GAAiB,CADJ;AAEhBC,QAAAA,GAAG,EAACC,UAAU,CAACnC,MAAD,CAFE;AAGhBoC,QAAAA,GAAG,EAACD,UAAU,CAACjC,MAAD,CAHE;AAIhBmC,QAAAA,IAAI,EAACjC;AAJW,OAAlB;AAMC3B,MAAAA,OAAO,CACL6D,MADF,CACSP,SADT,EAEEtB,IAFF,CAEO,UAAA8B,QAAQ,EAAG;AACbtC,QAAAA,SAAS,CAAC,EAAD,CAAT;AACAE,QAAAA,SAAS,CAAC,EAAD,CAAT;AACAE,QAAAA,UAAU,CAAC,EAAD,CAAV;AACFN,QAAAA,UAAU,CAACW,MAAM,CAAC8B,MAAP,CAAcD,QAAd,CAAD,CAAV;AACD,OAPF;AASF,KApBF;AAqBF,GAvBC;;AAwBF,WAASE,WAAT,CAAsBC,KAAtB,EAA4B;AAC1B,wBAEE,QAAC,KAAD;AACE,MAAA,OAAO,EAAE,CADX;AAEE,MAAA,MAAM,EAAC,cAFT;AAGE,MAAA,SAAS,EAAE5C,OAAO,CAAC4C,KAAD,CAAP,CAAeN,GAH5B;AAIE,MAAA,QAAQ,EAAEtC,OAAO,CAAC4C,KAAD,CAAP,CAAeR,GAJ3B;AAAA,6BAME;AAAA,gCACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAEN,aAA/B;AAAA,oBAA+C9B,OAAO,CAAC4C,KAAD,CAAP,CAAeL;AAA9D;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YAFF;AAkBD;;AACD,MAAMM,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAO;AACzBA,IAAAA,CAAC,CAAClC,MAAF;AACD,GAFD;AAIE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAMY,sBACI;AAAA,2BAqCI;AAAK,MAAA,KAAK,EAAC,UAAX;AAAA,6BACA,QAAC,GAAD;AAAA,+BACA,QAAC,GAAD;AAAK,UAAA,EAAE,EAAC,IAAR;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,SAAhB;AAAA,mCACJ,QAAC,QAAD;AAAU,cAAA,SAAS,EAAC,cAApB;AAAA,qCAEA,QAAC,YAAD;AACN,gBAAA,KAAK,EAAG;AAAEmC,kBAAAA,MAAM,EAAE,MAAV;AAAkBC,kBAAAA,KAAK,EAAE;AAAzB,iBADF;AAEN,gBAAA,MAAM,EAAEnB,SAFF;AAEa,gBAAA,IAAI,EAAE,EAFnB;AAEuB,gBAAA,OAAO,EAAE,GAFhC;AAGN,gBAAA,MAAM,EAAE,CAAC,UAAD,EAAa,UAAb,CAHF;AAG4B,gBAAA,IAAI,EAAE,EAHlC;AAGsC,gBAAA,OAAO,EAAE,GAH/C;AAIN,gBAAA,OAAO,EAAEgB,WAJH;AAAA,wCAMN,QAAC,OAAD;AAAS,kBAAA,SAAS,EAAE,CAAC,CAAC,SAAD,EAAY,SAAZ,CAAD,EAAwB,CAAC,SAAD,EAAY,SAAZ,CAAxB,EAA+C,CAAE,SAAF,EAAa,SAAb,CAA/C,EAAuE,CAAC,SAAD,EAAY,SAAZ,CAAvE,CAApB;AAAoH,kBAAA,KAAK,EAAC;AAA1H;AAAA;AAAA;AAAA;AAAA,yBANM,eAQN,QAAC,SAAD;AACF,kBAAA,GAAG,EAAC,oDADF;AAEF,kBAAA,WAAW,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,yBARM,eAiBhB,QAAC,SAAD;AACU,kBAAA,MAAM,EAAE3B,EADlB;AAEU,kBAAA,KAAK,EAAE;AAFjB;AAAA;AAAA;AAAA;AAAA,yBAjBgB,eAqBT,QAAC,SAAD;AACG,kBAAA,MAAM,EAAEH,IADX;AAEG,kBAAA,KAAK,EAAE;AAFV;AAAA;AAAA;AAAA;AAAA,yBArBS,eAyBhB,QAAC,SAAD;AACU,kBAAA,MAAM,EAAEC,EADlB;AAEU,kBAAA,KAAK,EAAE;AAFjB;AAAA;AAAA;AAAA;AAAA,yBAzBgB,eA6BhB,QAAC,SAAD;AACU,kBAAA,MAAM,EAAEC,EADlB;AAEU,kBAAA,KAAK,EAAE;AAFjB;AAAA;AAAA;AAAA;AAAA,yBA7BgB,eAkCR,QAAC,SAAD;AACE,kBAAA,MAAM,EAAEE,QADV;AAEE,kBAAA,KAAK,EAAE;AAFT;AAAA;AAAA;AAAA;AAAA,yBAlCQ,eAsChB,QAAC,SAAD;AACU,kBAAA,MAAM,EAAEC,OADlB;AAEU,kBAAA,KAAK,EAAE;AAFjB;AAAA;AAAA;AAAA;AAAA,yBAtCgB,EA8CLpB,OAAO,CAACiD,GAAR,CAAY,UAACC,MAAD,EAASN,KAAT,EAAmB;AAC5B,sBAAIO,IAAI,GAAG,CAACD,MAAM,CAACd,GAAR,EAAac,MAAM,CAACZ,GAApB,CAAX;AACF,sCAEE,QAAC,MAAD;AAEE,oBAAA,QAAQ,EAAEa,IAFZ;AAAA,8BAMDR,WAAW,CAACC,KAAD;AANV,qBACOA,KADP;AAAA;AAAA;AAAA;AAAA,2BAFF;AAaD,iBAfA,CA9CK;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AArCJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAwLH,CAraC;;GAAM7C,I;;KAAAA,I;AAyahB,eAAeA,IAAf","sourcesContent":["\n          import React, { useEffect, useState } from \"react\";\n          import { Link } from 'react-router-dom';\n          import { connect } from 'react-redux';\n          import data from './data/db.json';\n          //import service from 'services.js';\n          import axios from 'axios';\n          import DisplayEntries from \"./DisplayEntries\"\n          import service from \"./services.js\";\n          //import Map1 from './Map1.js'\n          //import { Map, CircleMarker, Polygon, Popup, Marker, TileLayer,Tooltip,ZoomControl } from \"react-leaflet\";\n          //import \"leaflet/dist/leaflet.css\";\n          //import data from \"./cities\";\n          import {MapContainer, Pane,  ImageOverlay, SVGOverlay, CircleMarker,LayerGroup, Polyline, Polygon, Popup, Rectangle, Marker, TileLayer,Tooltip,ZoomControl } from \"react-leaflet\";\n          import { Card, CardBody, CardTitle, Col, Row } from \"reactstrap\";\n\n         \n          \n          \n          \n          const Map1  = () => {\n            /*constructor(props) {\n                  super(props)\n                  this.state = {\n                    lat: 60.2330141,\n                    lng: 24.8302054,\n                    zoom: 15,\n                    maxZoom: 30\n                  }\n                }*/\n              const [markers, setMarkers] = useState([])\n                const [ newLat, setNewLat ] = useState('')\n                const [ newLng, setNewLng ] = useState('')\n                const [ newName, setNewName ] = useState('')\n                const [newFilter, setNewFilter] = useState('')\n                /*useEffect(()=>{\n                  axios.get('http://localhost:3001/markers')\n                  .then(response => setMarkers(response.data))\n                },[])*/\n          \n                useEffect(()=>{\n                  service\n                  .getAll()\n                  .then(latlng =>{\n                    console.log(\"returning\", latlng)\n                    setMarkers(latlng)\n                  })\n                },[])\n          \n          \n          \n             \n                /*const kids = [\n                  [60.233040, 24.830488],\n                  [60.233085, 24.830570],\n                  [60.233019, 24.830413],\n                  [60.233043, 24.830376], \n                  [60.233040, 24.830360],\n                  [60.233025, 24.830291]\n                ]\n                const home1 = [\n                  [60.232963, 24.830337],\n                  [60.233039, 24.830455],\n                  [60.233086, 24.830322],\n                  [60.233014, 24.830213], \n                ]\n                const Corridar = [\n                  [60.232986, 24.830354],\n                  [60.233010, 24.830479],\n                  [60.233076, 24.830597],\n                  [60.233068, 24.830526],\n                ]\n                const Kitchen = [\n                  [60.233041, 24.830330],\n                  [60.233065, 24.830372],\n                  [60.233085, 24.830314],\n                  [60.233066, 24.830276]\n                ]*/\n          \n                \n                const kids = [\n                  [60.23296, 24.83034],\n                  [60.23299, 24.83039],\n                  [60.23302, 24.83031],\n                  [60.23299, 24.83026]\n                  \n                ]\n                const br = [\n                  [60.23299, 24.83026],\n                  [60.23301, 24.83029],\n                  [60.23303, 24.83024],\n                  [60.23301, 24.83022]\n                ]\n                const tv = [\n                  [60.23301, 24.83030],\n                  [60.23304, 24.83035],\n                  [60.23306, 24.83030],\n                  [60.23303, 24.83025]\n                ]\n                const wc = [\n                  [60.23303, 24.83040],\n                  [60.23304, 24.83042],\n                  [60.23305, 24.83039],\n                  [60.23303, 24.83038]\n                ]\n                \n                \n\n                \n                const Corridar = [\n                  [60.23299, 24.83040],\n                  [60.23301, 24.83043],\n                  [60.23303, 24.83037],\n                  [60.23302, 24.83034],\n                ]\n                const Kitchen = [\n                  [60.23304, 24.83035],\n                  [60.23306, 24.83038],\n                  [60.23308, 24.83033],\n                  [60.23306, 24.83030]\n                ]\n            const changeHandler = (event) => setNewLat(event.target.value)\n            const changeHandler1 = (event) => setNewLng(event.target.value)\n            const changeHandler2= (event) => setNewName(event.target.value)\n            const changeHandlerFilter = (event) => setNewFilter(event.target.value)\n                \n                \n          \n          \n                  const position = [60.21749913, 24.938379];\n                  const position1 = [60.21749913, 24.806496774]\n                  console.log(position)\n                  /*const submitHandler = (event) => {\n          \n          \n                  const submitHandler = (event) => {\n                    event.preventDefault()\n              \n                    /*if(markers.some((entry)=> entry.name === newName)){\n                        alert(`${newName} is already added `)\n                        setNewLat(\"\")\n                        setNewLng(\"\")\n                        setNewName(\"\")\n                    }else{*/\n                      /*const newMarker = {\n                          lat:newLat,\n                          lng:newLng,\n                          name:newName,\n                          id:markers.length + 1\n                      }\n                      setNewLat(\"\")\n                        setNewLng(\"\")\n                        setNewName(\"\")\n                      setMarkers(markers.concat(newMarker))\n                    //}\n                }*/\n                const submitHandler = (event) => {\n                  event.preventDefault()\n                 service\n                  .getAll()\n                  .then(latlng =>{\n                    const allMarkers = [...latlng]\n          \n                    const newMarker = {\n                      id:markers.length + 1,\n                      lat:parseFloat(newLat),\n                      lng:parseFloat(newLng),\n                      name:newName\n                    }\n                     service\n                      .update(newMarker)\n                      .then(newEntry =>{\n                          setNewLat(\"\")\n                          setNewLng(\"\")\n                          setNewName(\"\")\n                        setMarkers(latlng.concat(newEntry))\n                      })\n          \n                  })\n              }\n              function renderPopup (index){\n                return (\n                  \n                  <Popup\n                    tipSize={5}\n                    anchor=\"bottom-right\"\n                    longitude={markers[index].lng}\n                    latitude={markers[index].lat}\n                  >\n                    <p>\n                      <button type=\"submit\" onClick={submitHandler}>{markers[index].name}</button>\n                      <br />\n                      \n                   \n                      \n                    </p>\n                  </Popup>\n                  \n                );\n              }\n              const handleClick = (e) => {\n                e.latlng()\n              }\n          \n                /*const submitHandler2 =(event) => {\n                  event.preventDefault()\n                  \n                  return (\n                   <div>\n                    <Map\n                    style={ { height: \"900px\", width: \"100%\"}}\n                    center={[markers.lat, markers.lng]} zoom={12} maxZoom={100}>\n                      const newMarker = {\n                        id:markers.length + 1,\n                        lat:parseFloat(newLat),\n                        lng:parseFloat(newLng),\n                        name:newName\n          \n                      }\n                       service\n                        .update(newMarker)\n                        .then(newEntry =>{\n                            setNewLat(\"\")\n                            setNewLng(\"\")\n                            setNewName(\"\")\n                          setMarkers(latlng.concat(newEntry))\n                        })\n          \n                    \n                    <TileLayer\n                  url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                  attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                />\n                    })\n                }\n          \n                    {markers.map((index) => {\n                      \n                        //let post1 = [markers[index].lat, markers[index].lng];\n                       // console.log(post1)\n                      return (\n                        <Marker\n                          key={index}\n                          position={{ lat: markers.lat, lng: markers.lng }}\n                          \n                          \n                        >\n                      \n                        </Marker>\n                      );\n                    })}\n                  </Map>\n                  </div>\n                  )\n                }*/\n        \n          \n            return (\n                <div>\n                  \n                  \n                    {/* <div>\n                    <div class='split left'>\n                      <div>\n                        <div>\n                          <br/>\n                          <br/> */}\n    \n                        {/* <form>\n                            <div>\n                          Search for: <input onChange={changeHandlerFilter} value={newFilter} /><br/>\n                          </div>\n                          <h1>Add a Building</h1>\n                          Lat: <input onChange={changeHandler} value={newLat} /><br/>\n                          Lng: <input onChange={changeHandler1} value={newLng} /><br/>\n                          Name: <input onChange={changeHandler2} value={newName} /><br/>\n    \n                        </form>\n                        </div>\n                        <div>\n              <button type=\"submit\" onClick={submitHandler}>add</button><br/>\n    \n    \n            </div>\n                      </div><br/><br/>\n                      <div class='position'>\n    \n                    <h3>Available List of Buildings</h3>\n                    <DisplayEntries names={markers} regVal={newFilter} />\n    \n                   </div>\n                    </div>\n                    </div> */}\n                   \n                    {/* <div class='split right'> */}\n                    <div class='position'>\n                    <Row>\n                    <Col sm=\"12\">\n                        <Card className=\"iq-card\">\n                    <CardBody className=\"iq-card-body\">\n                                \n                    <MapContainer\n              style={ { height: \"900%\", width: \"100%\"}}\n              center={position1} zoom={12} maxZoom={100}\n              center={[60.2330141, 24.8302054]} zoom={12} maxZoom={100}\n              onClick={handleClick}\n            >\n              <Polygon positions={[[60.218228, 24.811606],[60.218358, 24.811976],[ 60.218348, 24.812711],[60.217940, 24.811874]]} color='red' />\n    \n              <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          />\n    \n    \n    \n    \n    \n    <Rectangle\n              bounds={wc}\n              color={'yellow'}\n             />\n           <Rectangle\n              bounds={kids}\n              color={'red'}\n             />\n    <Rectangle\n              bounds={br}\n              color={'pink'}\n             />\n    <Rectangle\n              bounds={tv}\n              color={'purple'}\n             />\n    \n            <Rectangle\n              bounds={Corridar}\n              color={'blue'}\n             />\n    <Rectangle\n              bounds={Kitchen}\n              color={'orange'}\n             />\n    \n    \n    \n    \n              {markers.map((marker, index) => {\n                  let post = [marker.lat, marker.lng];\n                return (\n                  \n                  <Marker\n                    key={index}\n                    position={post}\n                    \n                    \n                  >\n                {renderPopup(index) }\n                  </Marker>\n                  \n                );\n                \n              })}\n              \n           </MapContainer>\n                            </CardBody>\n                            </Card>\n                    </Col>\n                </Row>\n    \n                    {/*  <MapContainer\n              style={ { height: \"900px\", width: \"100%\"}}\n              center={position1} zoom={12} maxZoom={100}\n              center={[60.2330141, 24.8302054]} zoom={12} maxZoom={100}\n              onClick={handleClick}\n            >\n              <Polygon positions={[[60.218228, 24.811606],[60.218358, 24.811976],[ 60.218348, 24.812711],[60.217940, 24.811874]]} color='red' />\n    \n              <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          />\n    \n    \n    \n    \n    \n    <Rectangle\n              bounds={wc}\n              color={'yellow'}\n             />\n           <Rectangle\n              bounds={kids}\n              color={'red'}\n             />\n    <Rectangle\n              bounds={br}\n              color={'pink'}\n             />\n    <Rectangle\n              bounds={tv}\n              color={'purple'}\n             />\n    \n            <Rectangle\n              bounds={Corridar}\n              color={'blue'}\n             />\n    <Rectangle\n              bounds={Kitchen}\n              color={'orange'}\n             />\n    \n    \n    \n    \n              {markers.map((marker, index) => {\n                  let post = [marker.lat, marker.lng];\n                return (\n                  \n                  <Marker\n                    key={index}\n                    position={post}\n                    \n                    \n                  >\n                {renderPopup(index) }\n                  </Marker>\n                  \n                );\n                \n              })}\n              \n            </MapContainer> */}\n           \n          \n            {/* </div> */}\n            </div>\n            </div>\n             \n            );\n        }\n\n\n\nexport default Map1\n "]},"metadata":{},"sourceType":"module"}